Quiz Title: CS-110 Programming 1: Example0
Quiz description: <ul><li>You MUST use your own copy of this assessment from Canvas. If you obtained this assessment document from a friend or elsewhere then delete this copy and use your own version from Canvas. If you experience difficulties downloading the assessment, get in contact via the emails below.</li><li>Online exams are open book. This means you may consult your notes, textbooks, and other resources. However, your answers should be your own and in your own words. Copying from resources other than your notes requires referencing. There will not be enough time to look up material for each question.</li><li>You must submit before the deadline. Allow some spare time for technical submission issues.</li><li>This assessment is designed to take 2 hours to complete (maybe a little longer to account for typing speed). The deadline has been set to give you a longer window than necessary to allow you time to deal with technical issues.</li><li>This is an individual assessment. Under no circumstances are you to discuss any aspect of this assessment with anyone - in person or online; nor are you allowed to share the exam document, ideas or solutions with others using email, social media, instant messaging, websites, or other means, until after 19:00 GMT (as some students may have extra time). Your attempts at these questions must be entirely your own work. There are strict penalties applied for anyone found to have committed academic misconduct. For example, the minimum penalty for collaborating with others is to receive a mark of 0% FOR THE MODULE, while the penalty for the commissioning of work is to be WITHDRAWN FROM THE UNIVERSITY.</li><li>By submitting you state that you fully understand and are complying with the University's <a href="https://myuni.swansea.ac.uk/academic-life/academic-misconduct/" target="_blank" rel="noopener">Academic Misconduct Policy</a>(opens in a new window/tab)</li></ul><h3>Special Instructions</h3><p>Answer All Questions.</p><h3>Emergency Contacts</h3><p>in case of queries email ALL of <a href="mailto:n.a.harman@swansea.ac.uk">n.a.harman@swansea.ac.uk</a>, <a href= "mailto:samuel.smith@swansea.ac.uk">samuel.smith@swansea.ac.uk</a> AND <a href= "mailto:assessment-scienceengineering@swansea.ac.uk">assessment-scienceengineering@swansea.ac.uk</a>.</p><p>&nbsp;</p><hr/><p>&nbsp;</p><h2>Problem Solving Questions</h2><p>Below are descriptions of the two Problem Solving question groups on this paper - you should refer to the background material on Canvas in the January Assessment Information module where you can find information on each of the six possible Problem Solving question types.</p><p>Remember that you can copy&paste strings, numbers and fragments of code from the questions - don't try to type them in.</p><p>&nbsp;</p><h3>Checksum</h3><p>One of the problem solving question blocks in this paper is based on CheckSums. You can find (and should already have read) background information on Checksums in the January Assessment Information module on Canvas.</p><p>NOTE there are some fragments of code in the algorithms below, but you are responsible for implementing them in Java<h4>Simple CheckSum Algorithm</h4><p>The simple checksum algorithm is as follows:</p><ul><li>We assume you are computing the checksum for a String called str.</li><li>Declare a variable k of type long and initialise it to 7</li><li>For each character in the string str:</li><ul><li>set k to k multiplied by 23</li><li>Add the ith character in str to k (use str.charAt(i) to get the ith character)</li><li>Set k to k multiplied by 13</li><li>Set k to the remainder of dividing k by 1000000009</li></ul><li>At the end of this loop the checksum is stored in k</li></ul><h4>Bitwise Checksum Algorithm</h4><p>The bitwise checksum algorithm is as follows:<ul><li>We assume you are computing the checksum for a string called str</li><li>Declare a variable c of type byte and initialise it to 0</li><li>Turn the string str into a byte array (str.getBytes() will return str as an array of bytes);<li>For each byte - curByte - in the array input:<ul><li>Set c as follows: c = (byte) (((c & 255) >>> 1) + ((c & 1) &lt;&lt; 7));</li><li>Now set c as follows: c = (byte) ((c + curByte) & 255);</li></ul><li>At the end of this loop c now contains the one byte checksum</li></ul><p>Remember: cut-and-paste long strings from the questions; do not try to type them in.</p>

